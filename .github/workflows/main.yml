# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-16.04]
        # use this to specify what resolvers and ghc to use
        plan:
        - { build: stack, resolver: "--resolver lts-3.22"  }
        # use this to include any dependencies from OS package managers
        include: []

    runs-on: ${{ matrix.os }}
    steps:
    - name: Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
    - uses: actions/checkout@v1

        
    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        # A directory to store and save the cache
        path: /home/runner/.stack
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-stack-${{ hashFiles('**/package.yml') }}
        restore-keys:  |
          ${{ runner.os }}-stack-
    - name: Setup stack
      uses: mstksg/setup-stack@v1

    - name: Setup cabal-install
      uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.plan.ghc }}
        cabal-version: ${{ matrix.plan.cabal-install }}
      if: matrix.plan.build == 'cabal'

    - name: Install dependencies
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
            ;;
          cabal)
            cabal --version
            cabal update
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}

    - name: Build
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
            stack install
            ;;
          cabal)
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
            ORIGDIR=$(pwd)
            for dir in $PACKAGES
            do
              cd $dir
              cabal check || [ "$CABALVER" == "1.16" ]
              cabal sdist
              PKGVER=$(cabal info . | awk '{print $2;exit}')
              SRC_TGZ=$PKGVER.tar.gz
              cd dist
              tar zxfv "$SRC_TGZ"
              cd "$PKGVER"
              cabal configure --enable-tests --ghc-options -O0
              cabal build
              if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
                cabal test
              else
                cabal test --show-details=streaming --log=/dev/stdout
              fi
              cd $ORIGDIR
            done
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: exe
        # Directory containing files to upload
        path: /home/runner/.local/bin/potato-labor-exe
